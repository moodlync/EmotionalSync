import{c as k,bF as z,bG as u,r as s,j as o,bH as G,aD as H,bI as A,bJ as V,aE as W,bK as Y,bL as q,bM as J,bN as D,aB as K,aC as Q,bO as U,al as n,bP as v}from"./index-BtgMuIOb.js";/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const xe=k("Ban",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"m4.9 4.9 14.2 14.2",key:"1m5liu"}]]);var x="AlertDialog",[X,ye]=z(x,[u]),i=u(),y=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(K,{...r,...t,modal:!0})};y.displayName=x;var Z="AlertDialogTrigger",N=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(G,{...l,...r,ref:a})});N.displayName=Z;var ee="AlertDialogPortal",b=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(Q,{...r,...t})};b.displayName=ee;var ae="AlertDialogOverlay",R=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(H,{...l,...r,ref:a})});R.displayName=ae;var c="AlertDialogContent",[te,oe]=X(c),re=U("AlertDialogContent"),_=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:r,...l}=e,g=i(t),p=s.useRef(null),B=A(a,p),f=s.useRef(null);return o.jsx(V,{contentName:c,titleName:j,docsSlug:"alert-dialog",children:o.jsx(te,{scope:t,cancelRef:f,children:o.jsxs(W,{role:"alertdialog",...g,...l,ref:B,onOpenAutoFocus:Y(l.onOpenAutoFocus,d=>{var m;d.preventDefault(),(m=f.current)==null||m.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(re,{children:r}),o.jsx(le,{contentRef:p})]})})})});_.displayName=c;var j="AlertDialogTitle",h=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(q,{...l,...r,ref:a})});h.displayName=j;var C="AlertDialogDescription",E=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(J,{...l,...r,ref:a})});E.displayName=C;var se="AlertDialogAction",w=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(D,{...l,...r,ref:a})});w.displayName=se;var P="AlertDialogCancel",S=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,{cancelRef:l}=oe(P,t),g=i(t),p=A(a,l);return o.jsx(D,{...g,...r,ref:p})});S.displayName=P;var le=({contentRef:e})=>{const a=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${C}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},ie=y,ne=N,ce=b,T=R,O=_,$=w,M=S,I=h,F=E;const Ne=ie,be=ne,de=ce,L=s.forwardRef(({className:e,...a},t)=>o.jsx(T,{className:n("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));L.displayName=T.displayName;const pe=s.forwardRef(({className:e,...a},t)=>o.jsxs(de,{children:[o.jsx(L,{}),o.jsx(O,{ref:t,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));pe.displayName=O.displayName;const ge=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",e),...a});ge.displayName="AlertDialogHeader";const fe=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});fe.displayName="AlertDialogFooter";const me=s.forwardRef(({className:e,...a},t)=>o.jsx(I,{ref:t,className:n("text-lg font-semibold",e),...a}));me.displayName=I.displayName;const ue=s.forwardRef(({className:e,...a},t)=>o.jsx(F,{ref:t,className:n("text-sm text-muted-foreground",e),...a}));ue.displayName=F.displayName;const Ae=s.forwardRef(({className:e,...a},t)=>o.jsx($,{ref:t,className:n(v(),e),...a}));Ae.displayName=$.displayName;const De=s.forwardRef(({className:e,...a},t)=>o.jsx(M,{ref:t,className:n(v({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));De.displayName=M.displayName;export{Ne as A,xe as B,be as a,pe as b,ge as c,me as d,ue as e,fe as f,De as g,Ae as h};
